# Generated by roxygen2: do not edit by hand

S3method("$",ArchRProject)
S3method("$<-",ArchRProject)
S3method("[",ArchRProject)
export("%bcin%")
export("%bcni%")
export("%ni%")
export(.DollarNames.ArchRProject)
export(ArchRBrowser)
export(ArchRBrowserTrack)
export(ArchRHeatmap)
export(ArchRPalettes)
export(ArchRProject)
export(addArchRAnnotations)
export(addArchRChrPrefix)
export(addArchRDebugging)
export(addArchRGenome)
export(addArchRH5Level)
export(addArchRLocking)
export(addArchRLogging)
export(addArchRThreads)
export(addArchRVerbose)
export(addBgdPeaks)
export(addCellColData)
export(addClusters)
export(addCoAccessibility)
export(addCombinedDims)
export(addDemuxletResults)
export(addDeviationsMatrix)
export(addDoubletScores)
export(addFeatureCounts)
export(addFeatureMatrix)
export(addGeneExpressionMatrix)
export(addGeneIntegrationMatrix)
export(addGeneScoreMatrix)
export(addGroupCoverages)
export(addHarmony)
export(addImputeWeights)
export(addIterativeLSI)
export(addModuleScore)
export(addMonocleTrajectory)
export(addMotifAnnotations)
export(addPeak2GeneLinks)
export(addPeakAnnotations)
export(addPeakMatrix)
export(addPeakSet)
export(addProjectSummary)
export(addReproduciblePeakSet)
export(addSampleColData)
export(addSlingShotTrajectories)
export(addTSNE)
export(addTileMatrix)
export(addTrajectory)
export(addUMAP)
export(confusionMatrix)
export(correlateMatrices)
export(correlateTrajectories)
export(createArrowFiles)
export(createGeneAnnotation)
export(createGenomeAnnotation)
export(createLogFile)
export(customEnrichment)
export(enrichHeatmap)
export(exportGroupSE)
export(exportPeakMatrixForSTREAM)
export(extendGR)
export(filterChrGR)
export(filterDoublets)
export(findMacs2)
export(getArchRChrPrefix)
export(getArchRDebugging)
export(getArchRGenome)
export(getArchRH5Level)
export(getArchRLogging)
export(getArchRThreads)
export(getArchRVerbose)
export(getArrowFiles)
export(getAvailableMatrices)
export(getBgdPeaks)
export(getBlacklist)
export(getCellColData)
export(getCellNames)
export(getChromLengths)
export(getChromSizes)
export(getCoAccessibility)
export(getEmbedding)
export(getExons)
export(getFeatures)
export(getFootprints)
export(getFragmentsFromArrow)
export(getFragmentsFromProject)
export(getGeneAnnotation)
export(getGenes)
export(getGenome)
export(getGenomeAnnotation)
export(getGroupBW)
export(getGroupFragments)
export(getGroupSE)
export(getGroupSummary)
export(getImputeWeights)
export(getInputFiles)
export(getMarkerFeatures)
export(getMarkers)
export(getMatches)
export(getMatrixFromArrow)
export(getMatrixFromProject)
export(getMonocleTrajectories)
export(getOutputDirectory)
export(getPBGroupSE)
export(getPeak2GeneLinks)
export(getPeakAnnotation)
export(getPeakSet)
export(getPositions)
export(getProjectSummary)
export(getReducedDims)
export(getSampleColData)
export(getSampleNames)
export(getSeqnames)
export(getTSS)
export(getTestArrow)
export(getTestFragments)
export(getTestProject)
export(getTrajectory)
export(getTutorialData)
export(getValidBarcodes)
export(getVarDeviations)
export(ggAlignPlots)
export(ggGroup)
export(ggHex)
export(ggOneToOne)
export(ggPoint)
export(import10xFeatureMatrix)
export(imputeMatrix)
export(installExtraPackages)
export(loadArchRProject)
export(mapLabels)
export(markerFeatures)
export(markerHeatmap)
export(markerPlot)
export(nCells)
export(nonOverlappingGR)
export(paletteContinuous)
export(paletteDiscrete)
export(peak2GeneHeatmap)
export(peakAnnoEnrichment)
export(plotBrowserTrack)
export(plotEmbedding)
export(plotEnrichHeatmap)
export(plotFootprints)
export(plotFragmentSizes)
export(plotGroups)
export(plotMarkerHeatmap)
export(plotMarkers)
export(plotPDF)
export(plotPeak2GeneHeatmap)
export(plotTSSEnrichment)
export(plotTrajectory)
export(plotTrajectoryHeatmap)
export(projectBulkATAC)
export(recoverArchRProject)
export(reformatFragmentFiles)
export(saveArchRProject)
export(setArchRLocking)
export(subsetArchRProject)
export(subsetCells)
export(theme_ArchR)
export(trajectoryHeatmap)
export(validBSgenome)
import(data.table)
importClassesFrom(GenomicRanges,GRanges)
importFrom(GenomicRanges,GRanges)
importFrom(Rcpp,sourceCpp)
useDynLib(ArchR)
